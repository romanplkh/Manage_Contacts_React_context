{"version":3,"sources":["misc/img/1.jfif","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/layout/static_pages/About.js","components/layout/static_pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","resp","wrap","_context","prev","next","fetch","sent","json","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","id_arg","dispatch_arg","method","t0","_this2","_this$props","name","email","phone","className","style","cursor","onClick","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","htmlFor","label","classnames","is-invalid","error","placeholder","onChange","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","headers","Content-type","body","JSON","stringify","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","Header","branding","href","About","NotFound","src","require","alt","Test","title","then","respone","ok","Error","status","data","catch","err","console","log","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.562f8f46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.3c524ea7.jfif\";","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(reducer(this.state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const resp = await (await fetch(\r\n      'https://jsonplaceholder.typicode.com/users'\r\n    )).json();\r\n\r\n    this.setState({ contacts: resp });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children} {/* value */}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id_arg, dispatch_arg) => {\r\n    try {\r\n      await fetch(`https://jsonplaceholder.typicode.com/users/${id_arg}`, {\r\n        method: 'DELETE'\r\n      });\r\n      dispatch_arg({ type: 'DELETE_CONTACT', payload: id_arg });\r\n    } catch (ex) {\r\n      dispatch_arg({ type: 'DELETE_CONTACT', payload: id_arg });\r\n    }\r\n  };\r\n\r\n  /* HTML RENDER || PLACEHOLDERS FOR DATA FROM PROPS ======>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */\r\n  render() {\r\n    const { id, name, email, phone } = this.props;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                {/* Show/Hide icon */}\r\n                <i\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                />\r\n                {/* DELETE ICON */}\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"far fa-edit\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: '#000',\r\n                      marginRight: '.5em'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {/* Contact INFO */}\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  /* GET VALUE FROM CONTEXT-STATE */\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2 text-center text-success\">\r\n                {' '}\r\n                Contact List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                /* CREATE COMPONENTS WITH DATA */\r\n                <Contact\r\n                  key={contact.id}\r\n                  id={contact.id}\r\n                  name={contact.name}\r\n                  email={contact.email}\r\n                  phone={contact.phone}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","/* FUNCTIONAL COMPONENT */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n/* DISPLAY INPUTS ADD FORM HTML */\r\nconst TextInputGroup = props => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        name={props.name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': props.error\r\n        })}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      {props.error && <div className=\"invalid-feedback\">{props.error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //=========================Validation=============================================\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    //CREATE NEW OBJECT WITH ENTERED DATA\r\n    const newContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    };\r\n\r\n    const resp = await (await fetch(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newContact)\r\n      }\r\n    )).json();\r\n\r\n    //DISPATCH DATA TO CONTEXT COMPONENT\r\n    dispatch({ type: 'ADD_CONTACT', payload: resp });\r\n\r\n    //Clear INPUT FIELDS ONCE CONTACT ADDED\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n    //REDITECT ONCE SUBMITTED\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  {/* FILL FORM-INPUT  WITH SOME DATA  */}\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-primary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\n/*  */\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    /* GET ID FROM THE URL ADDRESS */\r\n    const { id } = this.props.match.params;\r\n    const resp = await (await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    )).json();\r\n\r\n    this.setState({\r\n      name: resp.name,\r\n      email: resp.email,\r\n      phone: resp.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //=========================Validation=============================================\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    /* GET ID FROM URL TO MAKE A PUT REQUEST  */\r\n    const { id } = this.props.match.params;\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const resp = await (await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updateContact)\r\n      }\r\n    )).json();\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: resp });\r\n\r\n    //Clear INPUT FIELDS ONCE CONTACT ADDED\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n    //REDITECT ONCE SUBMITTED\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  {/* FILL FORM-INPUT  WITH SOME DATA  */}\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-primary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> &nbsp; Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> &nbsp; Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-info\" /> &nbsp; About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//Default property in case we do not pass it in Header\r\nHeader.defaultProps = {\r\n  branding: 'My Application'\r\n};\r\n\r\n//To check if properties are in correct format\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About \"Manage Your Contacts\" </h1>\r\n      <p className=\"lead\">Simple React app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n      <small className=\"lead\">Powered by: Roman Pelikh</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  const img = '../';\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <img src={require('../../../misc/img/1.jfif')} alt=\"Not Found\" />\r\n      <p className=\"lead\">Sorry that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/2')\r\n      .then(respone => {\r\n        if (!respone.ok) {\r\n          throw Error(respone.status);\r\n        }\r\n        return respone.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport Header from './components/layout/Header';\nimport About from './components/layout/static_pages/About';\nimport NotFound from './components/layout/static_pages/NotFound';\nimport Test from './components/test/Test';\n\n//STYLING\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Manage Your Contacts\" />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}